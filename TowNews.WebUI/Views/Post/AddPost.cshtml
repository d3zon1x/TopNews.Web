@using TopNews.Core.DTOS.Post;
@model PostDTO

@{
    ViewData["Title"] = "Posts";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    <link rel="stylesheet" href="~/dashboard/plugins/summernote/summernote-bs4.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.css" />
}
<style>
    .cropper-container {
        max-width: 100%; /* Ensure the container fits within its parent */
        border: 1px solid #ccc; /* Add a border or other styling as desired */
        padding: 20px; /* Add padding to create spacing around the container */
    }

    /* Style the custom file input as needed */
    .custom-file {
        margin-bottom: 10px;
    }

    /* Style the image container as needed */
    .img-container {
        max-width: 100%; /* Ensure the image fits within its container */
        display: none; /* Hide the container initially */
    }
</style>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Post managament</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a asp-controller="Dashboard" asp-action="Index">Home</a></li>
                        <li class="breadcrumb-item active">Create post</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <!-- SELECT2 EXAMPLE -->
            <div class="card card-default">
                <div class="card-header">
                    <h3 class="card-title">Create post</h3>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-5 offset-3">
                            <div class="card card-primary">
                                <div class="card-header">
                                    <h3 class="card-title">New post</h3>
                                </div>
                                @if (@ViewBag.AuthError != null)
                                {
                                    <span class="text-danger mt-3">@ViewBag.AuthError</span>
                                }

                                <form method="post" id="createPostForm" asp-controller="Post" asp-action="AddPost" enctype="multipart/form-data">
                                    <div class="card-body">
                                        <div class="form-group">
                                            <label>Title</label>
                                            <input type="text" asp-for="@Model.Title" class="form-control" placeholder="Title" />
                                        </div>
                                        <div class="form-group">
                                            <label>Description</label>
                                            <textarea id="summernote" type="text" asp-for="@Model.Description" class="form-control">Place <em>your</em> <u>post</u> <string>heare...</string></textarea>
                                        </div>
                                        <div class="form-group">
                                            <label>Text</label>
                                            <textarea id="text" type="text" asp-for="@Model.FullText" class="form-control">Place <em>your</em> <u>post</u> <string>heare...</string></textarea>
                                        </div>
                                        <div class="form-group">
                                            <label>Category</label>
                                            <select asp-for="CategoryId" asp-items="ViewBag.CategoryList" class="custom-select form-control-border"></select>
                                        </div>
                                        <div class="form-group">
                                            <label>Image</label>
                                            <div class=" input-group">
                                                <div class="custom-file">
                                                    <div class="custom-file">
                                                        <input type="file" id="Image" name="files" asp-for="@Model.File" class="custom-file-input" />
                                                        <label class="custom-file-label">Choose file...</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>Cropped Image</label>
                                            <div id="croppedImage"></div>
                                        </div>
                                        <div class="form-group">
                                            <button type="button" id="cropButton" class="btn btn-primary">Crop Image</button>
                                        </div>
                                    </div>
                                    <div class="card-footer">
                                        <button type="submit" id="btnCreatePost" class="btn btn-primary btnCreatePost">Create</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.card -->
        </div>
        <!-- /.row -->
    </section>
</div>
<!-- /.container-fluid -->
<!-- /.content -->

@section Scripts{
    <script src="~/dashboard/plugins/summernote/summernote-bs5.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/croppie/2.6.5/croppie.min.js"></script>
    <script>
        $(function () {
            $('#summernote').summernote({
                minHeight: 200
            })
            $('#text').summernote({
                minHeight: 200
            })
        });
    </script>
    <script>
        $(function () {
            var $imageInput = $('#Image');
            var $croppedImage = $('#croppedImage');
            var $cropper;

            // Зберігаємо обрізане зображення на клієнті
            var croppedImageData = null;

            // Ініціалізуємо Croppie при виборі файлу
            $imageInput.on('change', function () {
                var files = this.files;
                var file;

                if (files && files.length) {
                    file = files[0];

                    if (/^image\/\w+$/.test(file.type)) {
                        if ($cropper) {
                            $cropper.destroy();
                        }

                        $croppedImage.empty();

                        $cropper = new Croppie($croppedImage[0], {
                            viewport: { width: 200, height: 200 },
                            boundary: { width: 300, height: 300 },
                            aspectRatio: 16 / 9,
                            viewMode: 2,
                            responsive: true,
                            crop: function (event) {
                                // Під час обрізки зберігаємо обрізане зображення на клієнті
                                $cropper.result('base64').then(function (base64) {
                                    croppedImageData = base64;
                                });
                            }
                        });

                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $cropper.bind({
                                url: e.target.result
                            });
                        };

                        reader.readAsDataURL(file);
                    } else {
                        alert('Будь ласка, виберіть зображення.');
                    }
                }
            });

            $('#cropButton').on('click', function () {
                if ($cropper) {
                    // Очікуємо завершення операції і виводимо дані тільки після цього
                    $cropper.result('base64').then(function (base64) {
                        croppedImageData = base64;

                        // Створюємо новий об'єкт DataTransfer
                        let dataTransfer = new DataTransfer();

                        // Створюємо новий Blob з даними з Croppie (виправте тип та розширення, якщо потрібно)
                        let blob = dataURItoBlob(croppedImageData);

                        console.log(blob);

                        // Створюємо новий файл і додаємо його до DataTransfer
                        let file = new File([blob], "filename.png", { type: 'image/png' }); // Встановіть правильний тип і розширення файлу
                        dataTransfer.items.add(file);

                        // Оновлюємо FileList в інпуті
                        var inputElement = document.getElementById('Image'); // Замініть 'Image' на id вашого інпуту
                        inputElement.files = dataTransfer.files;
                    });
                }
            });
            function dataURItoBlob(dataURI) {
                var byteString = atob(dataURI.split(',')[1]);
                var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
                var ab = new ArrayBuffer(byteString.length);
                var ia = new Uint8Array(ab);
                for (var i = 0; i < byteString.length; i++) {
                    ia[i] = byteString.charCodeAt(i);
                }
                return new Blob([ab], { type: mimeString });
            }
        });
    </script>
}                                       